{
  // see https://www.typescriptlang.org/tsconfig to better understand tsconfigs
  "include": ["src", "types"],
  "compilerOptions": {
    "module": "esnext",
    "lib": ["dom", "esnext"],
    "target": "es6",
    "importHelpers": true,
    
    "strict": true, // stricter type-checking for stronger correctness. Recommended by TS
    "declaration": true, // output .d.ts declaration files for consumers
    "sourceMap": true, // output .js.map sourcemap files for consumers
    "rootDir": "./src", // match output dir to input dir. e.g. dist/index instead of dist/src/index
    
    "allowJs": true,
    "checkJs": false,
    
    "noImplicitReturns": true, // linter checks for common issues
    "noFallthroughCasesInSwitch": true,
    
    // noUnused* overlap with @typescript-eslint/no-unused-vars, can disable if duplicative
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    
    "moduleResolution": "node", // use Node's module resolution algorithm, instead of the legacy TS one
    
    "esModuleInterop": true, // interop between ESM and CJS modules. Recommended by TS
    
    "skipLibCheck": true, // significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS
    
    "forceConsistentCasingInFileNames": true, // error out if import and file system have a casing mismatch. Recommended by TS
    
    "noEmit": true, // `tsdx build` ignores this option, but it is commonly used when type-checking separately with `tsc`
  }
}
